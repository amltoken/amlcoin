{"version":3,"sources":["app/components/progress.bannner.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YA4BA;gBASE,gCAAoB,YAA6B;oBAA7B,iBAAY,GAAZ,YAAY,CAAiB;oBAC/C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,GAAE,CAAC,CAAC;oBACvD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACxB,CAAC;gBAID,gDAAe,GAAf;oBAAA,iBAQC;oBAPC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;wBACzB,EAAE,CAAA,CAAC,KAAI,CAAC,mBAAmB,GAAC,KAAI,CAAC,mBAAmB,IAAE,CAAC,IAAI,KAAI,CAAC,mBAAmB,IAAE,CAAC,CAAC,CAAA,CAAC;4BACtF,aAAa,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC;4BAChC,KAAI,CAAC,QAAQ,GAAC,IAAI,CAAC;wBACrB,CAAC;wBACD,KAAI,CAAC,UAAU,EAAE,CAAC;oBACpB,CAAC,EAAE,IAAI,CAAC,CAAC;gBACf,CAAC;gBACD,2CAAU,GAAV;oBAAA,iBAQC;oBAPC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;oBACzD,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,YAAyB;wBACrD,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC;wBAChD,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,OAAO,CAAC;oBAClD,CAAC,CAAC,CAAC;gBAGL,CAAC;gBAvDH;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,0dAeG;wBAEb,SAAS,EAAC,CAAC,uCAAgB,CAAC;qBAC7B,CAAC;;0CAAA;gBAoCF,6BAAC;YAAD,CAlCA,AAkCC,IAAA;YAlCD,2DAkCC,CAAA","file":"progress.bannner.component.js","sourcesContent":["import {Component, AfterViewInit} from \"@angular/core\";\nimport {BlockSyncService} from \"../services/skycoin.sync.service\";\nimport {Observable} from \"rxjs\";\nimport {SyncProgress} from \"../model/sync.progress\";\ndeclare var _: any;\n\n@Component({\n  selector: 'skycoin-block-sync',\n  template: `\n\n        \n             <div class=\"sync-div-container\">\n             \n             <ul class=\"fa-ul\">\n  <li><i class=\"fa-li fa fa-spinner fa-spin\" *ngIf=\"syncDone == false\"></i>\n  <span *ngIf=\"currentWalletNumber>0\">{{currentWalletNumber}} of {{highestWalletNumber}} blocks synced</span>\n  <span *ngIf=\"currentWalletNumber==0\">Syncing wallet</span>\n  </li>\n</ul>\n                \n               \n              </div>\n            \n              `\n  ,\n  providers:[BlockSyncService]\n})\n\nexport class SkycoinSyncWalletBlock implements AfterViewInit {\n\n  _syncProgress:Observable<SyncProgress>;\n\n  syncDone:boolean;\n\n  currentWalletNumber:number;\n  highestWalletNumber:number;\n\n  constructor(private _syncService:BlockSyncService){\n    this.currentWalletNumber = this.highestWalletNumber =0;\n    this.syncDone = false;\n  }\n\n  private handlerSync:any;\n\n  ngAfterViewInit(): any {\n    this.handlerSync = setInterval(() => {\n          if(this.highestWalletNumber-this.currentWalletNumber<=1 && this.highestWalletNumber!=0){\n            clearInterval(this.handlerSync);\n            this.syncDone=true;\n          }\n          this.syncBlocks();\n        }, 2000);\n  }\n  syncBlocks():any{\n    this._syncProgress = this._syncService.getSyncProgress();\n    this._syncProgress.subscribe((syncProgress:SyncProgress)=>{\n      this.currentWalletNumber = syncProgress.current;\n      this.highestWalletNumber = syncProgress.highest;\n    });\n\n\n  }\n}\n\n"]}