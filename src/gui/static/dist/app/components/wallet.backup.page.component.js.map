{"version":3,"sources":["app/components/wallet.backup.page.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAkDA;gBAGE,mCAAoB,QAAsB;oBAAtB,aAAQ,GAAR,QAAQ,CAAc;gBAAE,CAAC;gBAQ7C,mDAAe,GAAf;oBACE,IAAI,CAAC,eAAe,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACzB,CAAC;gBAED,+CAAW,GAAX;oBACE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,EAAE;wBACrB,EAAE,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,CAAC,CAAC,CAAA;gBACJ,CAAC;gBAED,mDAAe,GAAf;oBAAA,iBASC;oBARC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAA,YAAY;wBAEhD,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC;oBAC3C,CAAC,EACD,UAAA,GAAG;wBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACnB,CAAC,CACJ,CAAC;gBACJ,CAAC;gBAED,4CAAQ,GAAR,UAAS,EAAQ,EAAC,MAAU;oBAC1B,EAAE,CAAC,wBAAwB,EAAE,CAAC;oBAC9B,EAAE,CAAC,eAAe,EAAE,CAAC;oBACrB,IAAI,IAAI,GAAS,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAC,MAAM,EAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAC,CAAC,CAAC;oBACpG,IAAI,IAAI,GAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACrC,IAAI,CAAC,IAAI,GAAC,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;oBAC3C,IAAI,CAAC,UAAU,CAAC,GAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;oBACjD,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;gBACD,kDAAc,GAAd,UAAe,MAAM;oBACnB,MAAM,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC;gBACrC,CAAC;gBArCD;oBAAC,YAAK,EAAE;;0EAAA;gBArDV;oBAAC,gBAAS,CAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,8rDAkCG;wBAEb,MAAM,EAAE,CAAC,uDAIR,CAAC;wBACF,SAAS,EAAC,CAAC,8BAAa,CAAC;qBAC1B,CAAC;;6CAAA;gBA+CF,gCAAC;YAAD,CA7CA,AA6CC,IAAA;YA7CD,iEA6CC,CAAA","file":"wallet.backup.page.component.js","sourcesContent":["import {Component, AfterViewInit, Input, OnDestroy} from \"@angular/core\";\nimport {WalletService} from \"../services/wallet.service\";\n\ndeclare var moment: any;\n@Component({\n  selector: 'backup-wallets',\n  template: `\n<h2>Wallet Backup</h2>\n<p> Wallet Directory: <b>{{walletFolder}}</b> </p>\n<p>\n    <b>BACKUP YOUR SEED. ON PAPER. IN A SAFE PLACE.</b> As long as you have your seed, you can recover your coins.\n</p>\n<div class=\"table-responsive\">\n                  <table id=\"wallet-table\" class=\"table\">\n                  <thead>\n                    <tr class=\"dark-row\">\n                                <td>S. No</td>\n                                <td>Wallet Label</td>\n                                <td>File Name</td>\n                                <td>Download</td>\n                                <td>Seed</td>\n          \n                            </tr>\n</thead>\n                            <tbody>\n                      \n                            <tr *ngFor=\"let wallet of wallets;let i=index\">\n                                <td>{{i+1}}</td>\n                                <td>{{wallet.meta.label}}</td>\n                                <td>{{wallet.meta.filename}}</td>\n\n                                <td><a class=\"btn btn-success\" href=\"javascript:void(0);\" (click)=\"download($event,wallet)\">{{wallet.meta.filename}}</a></td>\n                                 <td>\n                                  <a class=\"btn btn-default\" *ngIf=\"!wallet?.showSeed\"  (click)=\"showOrHideSeed(wallet)\">Show Seed</a>\n                                  <p *ngIf=\"wallet?.showSeed\">{{wallet.meta.seed}}<a class=\"btn btn-default btn-margin\" (click)=\"showOrHideSeed(wallet)\">Hide Seed</a></p>\n                                 </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        </div>\n              `\n  ,\n  styles: [`\n    .btn-margin {\n      margin: 0 1rem;\n    }\n  `],\n  providers:[WalletService]\n})\n\nexport class WalletBackupPageComponent implements AfterViewInit, OnDestroy{\n\n\n  constructor(private _service:WalletService){}\n\n  walletFolder:string;\n\n  @Input()\n  wallets:any[];\n\n\n  ngAfterViewInit(): any {\n    this.getWalletFolder();\n    this.walletFolder = \"\";\n  }\n\n  ngOnDestroy() {\n    this.wallets.forEach(el => {\n      el.showSeed = false;\n    })\n  }\n\n  getWalletFolder():any{\n    this._service.getWalletFolder().subscribe(walletFolder=>\n        {\n          this.walletFolder = walletFolder.address;\n        },\n        err => {\n          console.log(err);\n        }\n    );\n  }\n\n  download(ev:Event,wallet:any) {\n    ev.stopImmediatePropagation();\n    ev.stopPropagation();\n    let blob: Blob = new Blob([JSON.stringify({\"seed\":wallet.meta.seed})], { type: 'application/json'});\n    let link=document.createElement('a');\n    link.href=window.URL.createObjectURL(blob);\n    link['download']= wallet.meta.filename + '.json';\n    link.click();\n  }\n  showOrHideSeed(wallet){\n    wallet.showSeed = !wallet.showSeed;\n  }\n}"]}